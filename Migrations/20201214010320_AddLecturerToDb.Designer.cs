// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Training_Facility.Model;

namespace Training_Facility.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201214010320_AddLecturerToDb")]
    partial class AddLecturerToDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Training_Facility.Model.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int?>("LecturerID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("degreeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CourseID");

                    b.HasIndex("LecturerID");

                    b.HasIndex("degreeID");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("Training_Facility.Model.Degree", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("lecturerID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("lecturerID");

                    b.ToTable("Degree");
                });

            modelBuilder.Entity("Training_Facility.Model.Lecturer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForeNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Lecturer");
                });

            modelBuilder.Entity("Training_Facility.Model.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForeNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LecturerID")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("degreeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("LecturerID");

                    b.HasIndex("degreeID");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("Training_Facility.Model.Course", b =>
                {
                    b.HasOne("Training_Facility.Model.Course", null)
                        .WithMany("Courses")
                        .HasForeignKey("CourseID");

                    b.HasOne("Training_Facility.Model.Lecturer", null)
                        .WithMany("courses")
                        .HasForeignKey("LecturerID");

                    b.HasOne("Training_Facility.Model.Degree", "degree")
                        .WithMany("Courses")
                        .HasForeignKey("degreeID");

                    b.Navigation("degree");
                });

            modelBuilder.Entity("Training_Facility.Model.Degree", b =>
                {
                    b.HasOne("Training_Facility.Model.Lecturer", "lecturer")
                        .WithMany("degrees")
                        .HasForeignKey("lecturerID");

                    b.Navigation("lecturer");
                });

            modelBuilder.Entity("Training_Facility.Model.Student", b =>
                {
                    b.HasOne("Training_Facility.Model.Lecturer", null)
                        .WithMany("students")
                        .HasForeignKey("LecturerID");

                    b.HasOne("Training_Facility.Model.Degree", "degree")
                        .WithMany()
                        .HasForeignKey("degreeID");

                    b.Navigation("degree");
                });

            modelBuilder.Entity("Training_Facility.Model.Course", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("Training_Facility.Model.Degree", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("Training_Facility.Model.Lecturer", b =>
                {
                    b.Navigation("courses");

                    b.Navigation("degrees");

                    b.Navigation("students");
                });
#pragma warning restore 612, 618
        }
    }
}
